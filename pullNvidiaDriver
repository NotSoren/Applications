#!/bin/bash

# supports geforce gt and [gr]tx series cards, quadros, and titans. 
# Does not support NVS xxx cards, or Tesla cards yet. 
# Not sure how it handles max-q cards or ti cards. 

#get the current nvidia gpu. 
#gpu=$(lspci | egrep -i nvidia | egrep -io '\[geforce [gr]tx? .*\]')
gpu=$(lspci | egrep -i nvidia | egrep -io '\[(((quadro|geforce [gr]tx? ).*|titan [xzvr]p?t?x?.*)|(nvs|tesla).*)\]')
gpu=$(echo $gpu | egrep -io '[a-z0-9 ]*'| head -n 1)
echo $gpu
if [ "$gpu" == '' ]; then 
    echo "no compatible gpu found!"
    exit 4
fi

#add header to the list of compatible drivers that we'll be making later.
echo driver,url > compatibleDrivers.csv

#get the archive list of linux drivers.
wget https://www.nvidia.com/object/linux-amd64-display-archive.html

#open the downloaded file, and pull out JUST the necessary lines for it to work, then iterate through them, storing the lines in $a. 
cat linux-amd64-display-archive.html | egrep -i 'Version: [3-9][0-9]{2,}\.[0-9]{1,}' | while read a; do 

#getting the version and URL of the current driver in the list from the archive.
dVersion=$(echo $a | egrep -io 'version: [0-9]*\.[0-9]*'| sed 's/Version: //ig')
dUrl=$(echo $a | egrep -io 'http:.*en-us')
# echo version: $dUrl $dVersion
#downloading the compatibility page for the driver.  
wget http://us.download.nvidia.com/XFree86/Linux-x86_64/$dVersion/README/supportedchips.html -O $dVersion 2> /dev/null
cat $dVersion | egrep '<td>' > tmp1
line=$(awk '/legacy GPUs/{ print NR; exit }' $dVersion)
#echo $line 
cat tmp1 | head -$line | egrep -i '<td>[a-z]..*</td>' > tmp
#checking if it's compatible, using the list. 
if grep -q "$gpu" "tmp"; then
    #if true, add to the list of compatible drivers.
    echo $dVersion','$dUrl>> compatibleDrivers.csv
    echo $dVersion' Supported'
else
    #if false, move on. 
    echo $dVersion' Not supported'
fi
#removing compatibility file from folder. 

rm $dVersion

done

#generate the URL for the most recent compatible driver, and download it.
mostRecent=$(sed '2q;d' compatibleDrivers.csv)
echo $mostRecent
newUrl=$(echo $mostRecent | egrep -io 'http:.*en-us')
echo $newUrl
driverNumber=$(echo $mostRecent | egrep -io '^[^,]*')
echo $driverNumber
wget 'http://us.download.nvidia.com/XFree86/Linux-x86_64/'$(echo $mostRecent | egrep -io '^[^,]*')'/NVIDIA-Linux-x86_64-'$(echo $mostRecent | egrep -io '^[^,]*')'.run' -O 'NVIDIA-Linux-x86_64-'$(echo $mostRecent | egrep -io '^[^,]*')'.run'
rm tmp tmp1 linux-amd64-display-archive.html* 2> /dev/null

#chmod the file so it can be run by the user. 
if [ $(whoami) = 'root' ]; then
    echo 'automagically allowing execution of the downloaded file'
    chmod +x 'NVIDIA-Linux-x86_64-'$(echo $mostRecent | egrep -io '^[^,]*')'.run'
fi

# Keeping this around just in case
# wget $newUrl -O Recent_page
# confirmUrl=$(cat Recent_page | egrep 'nvEventTracker' | egrep -io 'content/driverdownload.*type=titan"')
# confirmUrl=$(echo https://www.nvidia.com/$confirmUrl)
# echo $confirmUrl
# wget $confirmUrl -O Recent_page
# cat Recent_page | egrep 'nvEventTracker'
